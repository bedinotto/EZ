
class TestePrincipal {
    //class String {
    //    string s;
    //    constructor(){
    //        s = "";
    //    }
    //    // compare position by position x and s and return 0 if equals
    //    int equals(string x){
    //        int i;
    //        i = 0;
    //        for ( i = 0; x[i] != "\0"; i = i + 1){
    //            if (x[i] != s[j]) return 1;
    //        }
    //        if (s[j] != "\0") return 1;
    //        return 0;
    //    }
    //}
    class Data {
        int dia, mes, ano;

        constructor(){
            dia = 1;
            mes = 1;
            ano = 1;
        }

        constructor(int d, int m, int a){
            dia = d;
            mes = m;
            ano = a;
        }

        int comparaDia(Data x){
            if ( this.dia < x.dia) return -1;
            if ( this.dia > x.dia) return 1;
            return 0;
        }

        int comparaMes(Data x){
            if ( this.mes < x.mes) return -1;
            if ( this.mes > x.mes) return 1;
            return 0;
        }

        int comparaAno(Data x){
            if ( this.ano < x.ano) return -1;
            if ( this.ano > x.ano) return 1;
            return 0;
        }
    }

    class Pessoa {
        string nome;
        Data nascimento;

        constructor(){
            nome = "";
            nascimento = new Data();
        }

        constructor(string n, Data d){
            nome = n;
            nascimento = d;
        }

        int imprime(){
            print "Nome: " + nome + "\n";
            print "Data de nascimento: " + nascimento.dia + "/" + nascimento.mes + "/" + nascimento.ano + "\n";
            return 0;
        }

        int compara(Pessoa x){
            int cAno;
            cAno = nascimento.comparaAno(x.nascimento);
            int cMes;
            cMes = nascimento.comparaMes(x.nascimento);
            int cDia;
            cDia = nascimento.comparaDia(x.nascimento);

            if (cAno == 0) 
                if (cMes == 0)
                    if (cDia == 0)
                        return 0;
            if (cAno == 1) return 1;
            if (cAno == -1) return -1;
            if (cAno == 0)
                if (cMes == 1) 
                    return 1;
            if (cAno == 0)
                if (cMes == -1) 
                    return -1;
            if (cAno == 0) 
                if (cMes == 0) 
                    if (cDia == 1)
                        return 1;
            if (cAno == 0) 
                if (cMes == 0)
                    if (cDia == -1) 
                        return -1;
            return 0;
        }
    }

    class Agenda {
        Pessoa pessoas[];
        int qtdPessoas;

        constructor(){
            pessoas = new Pessoa[10];
            qtdPessoas = 0;
        }

        int armazenaPessoa(string n, Data d, int i){
            pessoas[i] = new Pessoa(n, d);
            qtdPessoas = qtdPessoas + 1;
            return 0;
        }

        int removePessoa(string n){
            int i;
            int j;
            for (i = 0; i < qtdPessoas; i = i + 1){
                if (pessoas[i].nome == n){
                    for (j = i; j < qtdPessoas; j = j + 1){
                        pessoas[j] = pessoas[j+1];
                    }
                    qtdPessoas = qtdPessoas - 1;
                }
            }
            return 0;
        }

        int buscaPessoa(string n){
            int i;
            for (i = 0; i < qtdPessoas; i = i + 1){
                if (pessoas[i].nome == n){
                    return i;
                }
            }
            return -1;
        }

        int imprimeAgenda(){
            int i, j;
            Pessoa aux;
            for (i = 0; i < qtdPessoas; i = i + 1){
                aux = pessoas[i];
                j = aux.imprime();
            }
            return j;
        }

        int imprimePessoa(int index){
            int j;
            Pessoa aux;
            aux = pessoas[index];
            j = aux.imprime();
            return j;
        }
    }

    int start (){
        Agenda minhaAgenda;
        minhaAgenda = new Agenda();
        int i;
        int j;
        Data d;
        for (i = 0; i < 10; i = i + 1){
            d = new Data(i, i, i);
            j = minhaAgenda.armazenaPessoa("Pessoa " + i, d, i);
        }
        j = minhaAgenda.imprimeAgenda();
        j = minhaAgenda.removePessoa("Pessoa 5");
        j = minhaAgenda.imprimeAgenda();
        j = minhaAgenda.imprimePessoa(3);
        for (i = 0; i < 10; i = i + 1){
            j = minhaAgenda.removePessoa("Pessoa " + i);
        }
        return 0;
    }
}

